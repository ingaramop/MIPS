Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.12 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.12 secs
 
--> Reading design: Top.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "Top.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "Top"
Output Format                      : NGC
Target Device                      : xc6slx16-3-csg324

---- Source Options
Top Module Name                    : Top
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 16
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

---- Other Options
Cores Search Directories           : {"ipcore_dir"  }

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "E:\UARTTincho\UC.v" into library work
Parsing module <UC>.
Analyzing Verilog file "E:\UARTTincho\signExtend.v" into library work
Parsing module <signExtend>.
Analyzing Verilog file "E:\UARTTincho\Mux5Bit.v" into library work
Parsing module <Mux5Bit>.
Analyzing Verilog file "E:\UARTTincho\MUX2to1.v" into library work
Parsing module <mux2to1>.
Analyzing Verilog file "E:\UARTTincho\Mux.v" into library work
Parsing module <Mux32Bit>.
Analyzing Verilog file "E:\UARTTincho\Memoria.v" into library work
Parsing module <Memoria>.
Analyzing Verilog file "E:\UARTTincho\ipcore_dir\ROM.v" into library work
Parsing module <ROM>.
Analyzing Verilog file "E:\UARTTincho\bancoDeRegistros.v" into library work
Parsing module <bancoDeRegistros>.
Analyzing Verilog file "E:\UARTTincho\alu_adder.v" into library work
Parsing module <AluAdder>.
Analyzing Verilog file "E:\UARTTincho\aluControl.v" into library work
Parsing module <AluControl>.
Analyzing Verilog file "E:\UARTTincho\alu.v" into library work
Parsing module <Alu>.
Analyzing Verilog file "E:\UARTTincho\addPc.v" into library work
Parsing module <addPc>.
Analyzing Verilog file "E:\UARTTincho\Tx.v" into library work
Parsing module <Tx>.
Analyzing Verilog file "E:\UARTTincho\stage_wb.v" into library work
Parsing module <stage_wb>.
Analyzing Verilog file "E:\UARTTincho\stage_mem.v" into library work
Parsing module <stage_mem>.
Analyzing Verilog file "E:\UARTTincho\Rx.v" into library work
Parsing module <Rx>.
Analyzing Verilog file "E:\UARTTincho\InstructionFetch.v" into library work
Parsing module <InstructionFetch>.
Analyzing Verilog file "E:\UARTTincho\InstructionDecode.v" into library work
Parsing module <InstructionDecode>.
Analyzing Verilog file "E:\UARTTincho\FF_Buf_Interface.v" into library work
Parsing module <FF_Buf_Interface>.
Analyzing Verilog file "E:\UARTTincho\EX.v" into library work
Parsing module <Execute>.
Analyzing Verilog file "E:\UARTTincho\Baud_Rate.v" into library work
Parsing module <Baud_Rate>.
Analyzing Verilog file "E:\UARTTincho\UART.v" into library work
Parsing module <UART>.
Analyzing Verilog file "E:\UARTTincho\Pipeline.v" into library work
Parsing module <Pipeline>.
Analyzing Verilog file "E:\UARTTincho\EndProgramDetector.v" into library work
Parsing module <EndProgramDetector>.
Analyzing Verilog file "E:\UARTTincho\debugger_TX.v" into library work
Parsing module <DebuggerTx>.
Analyzing Verilog file "E:\UARTTincho\DebuggerRx.v" into library work
Parsing module <DebuggerRx>.
Analyzing Verilog file "E:\UARTTincho\Top.v" into library work
Parsing module <Top>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <Top>.

Elaborating module <UART>.

Elaborating module <Baud_Rate>.

Elaborating module <Rx>.

Elaborating module <FF_Buf_Interface>.

Elaborating module <Tx>.

Elaborating module <DebuggerRx>.

Elaborating module <DebuggerTx>.

Elaborating module <EndProgramDetector>.
WARNING:HDLCompiler:413 - "E:\UARTTincho\EndProgramDetector.v" Line 40: Result of 4-bit expression is truncated to fit in 3-bit target.

Elaborating module <Pipeline>.

Elaborating module <InstructionFetch>.

Elaborating module <mux2to1>.

Elaborating module <ROM>.
WARNING:HDLCompiler:1499 - "E:\UARTTincho\ipcore_dir\ROM.v" Line 39: Empty module <ROM> remains a black box.

Elaborating module <addPc>.
WARNING:HDLCompiler:413 - "E:\UARTTincho\addPc.v" Line 6: Result of 11-bit expression is truncated to fit in 10-bit target.

Elaborating module <InstructionDecode>.

Elaborating module <UC>.

Elaborating module <bancoDeRegistros>.

Elaborating module <signExtend>.

Elaborating module <Execute>.

Elaborating module <Alu>.

Elaborating module <AluAdder>.

Elaborating module <AluControl>.

Elaborating module <Mux32Bit>.

Elaborating module <Mux5Bit>.

Elaborating module <stage_mem>.

Elaborating module <Memoria>.
WARNING:HDLCompiler:1127 - "E:\UARTTincho\Memoria.v" Line 40: Assignment to read_address ignored, since the identifier is never used

Elaborating module <stage_wb>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <Top>.
    Related source file is "E:\UARTTincho\Top.v".
    Summary:
	no macro.
Unit <Top> synthesized.

Synthesizing Unit <UART>.
    Related source file is "E:\UARTTincho\UART.v".
    Summary:
	no macro.
Unit <UART> synthesized.

Synthesizing Unit <Baud_Rate>.
    Related source file is "E:\UARTTincho\Baud_Rate.v".
    Found 1-bit register for signal <tick>.
    Found 9-bit register for signal <cuenta>.
    Found 9-bit adder for signal <_n0011> created at line 36.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  10 D-type flip-flop(s).
Unit <Baud_Rate> synthesized.

Synthesizing Unit <Rx>.
    Related source file is "E:\UARTTincho\Rx.v".
    Found 4-bit register for signal <s_reg>.
    Found 3-bit register for signal <n_reg>.
    Found 8-bit register for signal <b_reg>.
    Found 2-bit register for signal <state_reg>.
    Found finite state machine <FSM_0> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 5                                              |
    | Outputs            | 2                                              |
    | Clock              | clock (rising_edge)                            |
    | Reset              | reset (positive)                               |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 3-bit adder for signal <n_reg[2]_GND_4_o_add_21_OUT> created at line 93.
    Found 4-bit adder for signal <s_reg[3]_GND_4_o_add_34_OUT> created at line 105.
    Found 4-bit 4-to-1 multiplexer for signal <s_next> created at line 67.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  15 D-type flip-flop(s).
	inferred  11 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <Rx> synthesized.

Synthesizing Unit <FF_Buf_Interface>.
    Related source file is "E:\UARTTincho\FF_Buf_Interface.v".
    Found 1-bit register for signal <flag_reg>.
    Found 8-bit register for signal <buf_reg>.
    Summary:
	inferred   9 D-type flip-flop(s).
Unit <FF_Buf_Interface> synthesized.

Synthesizing Unit <Tx>.
    Related source file is "E:\UARTTincho\Tx.v".
    Found 4-bit register for signal <s_reg>.
    Found 3-bit register for signal <n_reg>.
    Found 8-bit register for signal <b_reg>.
    Found 1-bit register for signal <tx_reg>.
    Found 2-bit register for signal <state_reg>.
    Found finite state machine <FSM_1> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 4                                              |
    | Outputs            | 2                                              |
    | Clock              | clock (rising_edge)                            |
    | Reset              | reset (positive)                               |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 3-bit adder for signal <n_reg[2]_GND_6_o_add_22_OUT> created at line 107.
    Found 4-bit adder for signal <s_reg[3]_GND_6_o_add_35_OUT> created at line 122.
    Found 4-bit 4-to-1 multiplexer for signal <s_next> created at line 72.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  16 D-type flip-flop(s).
	inferred  10 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <Tx> synthesized.

Synthesizing Unit <DebuggerRx>.
    Related source file is "E:\UARTTincho\DebuggerRx.v".
    Found 1-bit register for signal <rd_uart>.
    Found 1-bit register for signal <pipeline_clk_enable>.
    Found 1-bit register for signal <pipelineReset>.
    Found 1-bit register for signal <sendSignal>.
    Found 3-bit register for signal <current_state>.
    Found finite state machine <FSM_2> for signal <current_state>.
    -----------------------------------------------------------------------
    | States             | 7                                              |
    | Transitions        | 13                                             |
    | Inputs             | 5                                              |
    | Outputs            | 5                                              |
    | Clock              | clock (falling_edge)                           |
    | Reset              | reset (positive)                               |
    | Reset type         | synchronous                                    |
    | Reset State        | 000                                            |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred   4 D-type flip-flop(s).
	inferred   7 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <DebuggerRx> synthesized.

Synthesizing Unit <DebuggerTx>.
    Related source file is "E:\UARTTincho\debugger_TX.v".
    Found 1-bit register for signal <dataSent>.
    Found 11-bit register for signal <aux_reg>.
    Found 2-bit register for signal <state_reg_tx>.
    Found finite state machine <FSM_3> for signal <state_reg_tx>.
    -----------------------------------------------------------------------
    | States             | 3                                              |
    | Transitions        | 6                                              |
    | Inputs             | 3                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (positive)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | 01                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 11-bit subtractor for signal <aux_reg[10]_GND_8_o_sub_21_OUT> created at line 95.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_6_OUT<10:0>> created at line 77.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_8_OUT<10:0>> created at line 78.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_10_OUT<10:0>> created at line 79.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_12_OUT<10:0>> created at line 80.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_14_OUT<10:0>> created at line 81.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_16_OUT<10:0>> created at line 82.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_18_OUT<10:0>> created at line 83.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_23_OUT<10:0>> created at line 97.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_25_OUT<10:0>> created at line 98.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_27_OUT<10:0>> created at line 99.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_29_OUT<10:0>> created at line 100.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_31_OUT<10:0>> created at line 101.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_33_OUT<10:0>> created at line 102.
    Found 11-bit subtractor for signal <GND_8_o_GND_8_o_sub_35_OUT<10:0>> created at line 103.
    Found 1-bit 1720-to-1 multiplexer for signal <aux_reg[10]_X_8_o_Mux_4_o> created at line 76.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_6_o> created at line 77.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_8_o> created at line 78.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_10_o> created at line 79.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_12_o> created at line 80.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_14_o> created at line 81.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_16_o> created at line 82.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_18_o> created at line 83.
    Found 1-bit 1720-to-1 multiplexer for signal <aux_reg[10]_X_8_o_Mux_21_o> created at line 96.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_23_o> created at line 97.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_25_o> created at line 98.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_27_o> created at line 99.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_29_o> created at line 100.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_31_o> created at line 101.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_33_o> created at line 102.
    Found 1-bit 1720-to-1 multiplexer for signal <GND_8_o_X_8_o_Mux_35_o> created at line 103.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_49_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_51_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_53_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_55_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_57_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_59_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_61_o> created at line 59.
    Found 1-bit 4-to-1 multiplexer for signal <state_reg_tx[1]_GND_8_o_Mux_63_o> created at line 59.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <w_data<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 11-bit comparator greater for signal <aux_reg[10]_GND_8_o_LessThan_37_o> created at line 104
    Summary:
	inferred  15 Adder/Subtractor(s).
	inferred  12 D-type flip-flop(s).
	inferred   8 Latch(s).
	inferred   1 Comparator(s).
	inferred  26 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <DebuggerTx> synthesized.

Synthesizing Unit <EndProgramDetector>.
    Related source file is "E:\UARTTincho\EndProgramDetector.v".
    Found 1-bit register for signal <programEnd>.
    Found 3-bit register for signal <counter>.
    Found 3-bit adder for signal <counter[2]_GND_26_o_add_3_OUT> created at line 40.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred   4 D-type flip-flop(s).
	inferred   2 Multiplexer(s).
Unit <EndProgramDetector> synthesized.

Synthesizing Unit <Pipeline>.
    Related source file is "E:\UARTTincho\Pipeline.v".
    Summary:
	no macro.
Unit <Pipeline> synthesized.

Synthesizing Unit <InstructionFetch>.
    Related source file is "E:\UARTTincho\InstructionFetch.v".
    Found 32-bit register for signal <Instruction>.
    Found 10-bit register for signal <PCNextReg>.
    Summary:
	inferred  42 D-type flip-flop(s).
Unit <InstructionFetch> synthesized.

Synthesizing Unit <mux2to1>.
    Related source file is "E:\UARTTincho\MUX2to1.v".
    Summary:
	inferred   1 Multiplexer(s).
Unit <mux2to1> synthesized.

Synthesizing Unit <addPc>.
    Related source file is "E:\UARTTincho\addPc.v".
    Found 10-bit adder for signal <outPc> created at line 6.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <addPc> synthesized.

Synthesizing Unit <InstructionDecode>.
    Related source file is "E:\UARTTincho\InstructionDecode.v".
    Found 1-bit register for signal <RegDstOut>.
    Found 1-bit register for signal <ALUSrcOut>.
    Found 1-bit register for signal <BranchOut>.
    Found 1-bit register for signal <MemReadOut>.
    Found 1-bit register for signal <MemWriteOut>.
    Found 1-bit register for signal <MemToRegOut>.
    Found 1-bit register for signal <RegWriteOut>.
    Found 32-bit register for signal <regA>.
    Found 32-bit register for signal <regB>.
    Found 32-bit register for signal <signExtendOut>.
    Found 5-bit register for signal <rt>.
    Found 5-bit register for signal <rd>.
    Found 10-bit register for signal <PcCountOut>.
    Found 2-bit register for signal <ALUOpOut>.
    Summary:
	inferred 125 D-type flip-flop(s).
Unit <InstructionDecode> synthesized.

Synthesizing Unit <UC>.
    Related source file is "E:\UARTTincho\UC.v".
    Found 32x2-bit Read Only RAM for signal <_n0103>
    Summary:
	inferred   1 RAM(s).
	inferred   1 Multiplexer(s).
Unit <UC> synthesized.

Synthesizing Unit <bancoDeRegistros>.
    Related source file is "E:\UARTTincho\bancoDeRegistros.v".
        DATA_WIDTH = 32
        REGFILE_WIDTH = 5
    Found 1024-bit register for signal <registers>.
    Found 32-bit 32-to-1 multiplexer for signal <regA> created at line 45.
    Found 32-bit 32-to-1 multiplexer for signal <regB> created at line 46.
    Summary:
	inferred 1024 D-type flip-flop(s).
	inferred  44 Multiplexer(s).
Unit <bancoDeRegistros> synthesized.

Synthesizing Unit <signExtend>.
    Related source file is "E:\UARTTincho\signExtend.v".
    Summary:
	no macro.
Unit <signExtend> synthesized.

Synthesizing Unit <Execute>.
    Related source file is "E:\UARTTincho\EX.v".
    Found 32-bit register for signal <aluResult>.
    Found 32-bit register for signal <outData2>.
    Found 10-bit register for signal <outPC>.
    Found 5-bit register for signal <wr>.
    Found 1-bit register for signal <outBranch>.
    Found 1-bit register for signal <outMemToReg>.
    Found 1-bit register for signal <outRegWrite>.
    Found 1-bit register for signal <outMemWrite>.
    Found 1-bit register for signal <outMemRead>.
    Found 10-bit register for signal <outCurrentPC>.
    Found 1-bit register for signal <zero>.
    Summary:
	inferred  95 D-type flip-flop(s).
Unit <Execute> synthesized.

Synthesizing Unit <Alu>.
    Related source file is "E:\UARTTincho\alu.v".
    Found 32-bit subtractor for signal <data1[31]_data2[31]_sub_6_OUT> created at line 29.
    Found 32-bit adder for signal <data1[31]_data2[31]_add_2_OUT> created at line 20.
    Found 32-bit comparator greater for signal <data1[31]_data2[31]_LessThan_7_o> created at line 35
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred   1 Comparator(s).
Unit <Alu> synthesized.

Synthesizing Unit <AluAdder>.
    Related source file is "E:\UARTTincho\alu_adder.v".
    Found 10-bit adder for signal <addResult> created at line 26.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <AluAdder> synthesized.

Synthesizing Unit <AluControl>.
    Related source file is "E:\UARTTincho\aluControl.v".
    Summary:
	no macro.
Unit <AluControl> synthesized.

Synthesizing Unit <Mux32Bit>.
    Related source file is "E:\UARTTincho\Mux.v".
    Summary:
	inferred   1 Multiplexer(s).
Unit <Mux32Bit> synthesized.

Synthesizing Unit <Mux5Bit>.
    Related source file is "E:\UARTTincho\Mux5Bit.v".
    Summary:
	inferred   1 Multiplexer(s).
Unit <Mux5Bit> synthesized.

Synthesizing Unit <stage_mem>.
    Related source file is "E:\UARTTincho\stage_mem.v".
WARNING:Xst:647 - Input <memReadIn> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 1-bit register for signal <memToRegOut>.
    Found 32-bit register for signal <readDataOut>.
    Found 32-bit register for signal <aluResultOut>.
    Found 5-bit register for signal <wrOut>.
    Found 10-bit register for signal <outCurrentPC>.
    Found 1-bit register for signal <regWriteOut>.
    Summary:
	inferred  81 D-type flip-flop(s).
Unit <stage_mem> synthesized.

Synthesizing Unit <Memoria>.
    Related source file is "E:\UARTTincho\Memoria.v".
        DATA_WIDTH = 32
        MEM_WIDTH = 4
    Found 512-bit register for signal <n0028[511:0]>.
    Found 32-bit 16-to-1 multiplexer for signal <douta> created at line 59.
    Summary:
	inferred 512 D-type flip-flop(s).
	inferred  17 Multiplexer(s).
Unit <Memoria> synthesized.

Synthesizing Unit <stage_wb>.
    Related source file is "E:\UARTTincho\stage_wb.v".
    Summary:
	inferred   3 Multiplexer(s).
Unit <stage_wb> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 1
 32x2-bit single-port Read Only RAM                    : 1
# Adders/Subtractors                                   : 25
 10-bit adder                                          : 2
 11-bit subtractor                                     : 15
 3-bit adder                                           : 3
 32-bit adder                                          : 1
 32-bit subtractor                                     : 1
 4-bit adder                                           : 2
 9-bit adder                                           : 1
# Registers                                            : 56
 1-bit register                                        : 25
 10-bit register                                       : 5
 1024-bit register                                     : 1
 11-bit register                                       : 1
 2-bit register                                        : 1
 3-bit register                                        : 3
 32-bit register                                       : 8
 4-bit register                                        : 2
 5-bit register                                        : 4
 512-bit register                                      : 1
 8-bit register                                        : 4
 9-bit register                                        : 1
# Latches                                              : 8
 1-bit latch                                           : 8
# Comparators                                          : 2
 11-bit comparator greater                             : 1
 32-bit comparator greater                             : 1
# Multiplexers                                         : 124
 1-bit 1720-to-1 multiplexer                           : 16
 1-bit 2-to-1 multiplexer                              : 22
 1-bit 4-to-1 multiplexer                              : 8
 10-bit 2-to-1 multiplexer                             : 1
 11-bit 2-to-1 multiplexer                             : 1
 2-bit 2-to-1 multiplexer                              : 1
 3-bit 2-to-1 multiplexer                              : 4
 32-bit 16-to-1 multiplexer                            : 1
 32-bit 2-to-1 multiplexer                             : 51
 32-bit 32-to-1 multiplexer                            : 2
 4-bit 2-to-1 multiplexer                              : 12
 4-bit 4-to-1 multiplexer                              : 2
 5-bit 2-to-1 multiplexer                              : 2
 8-bit 2-to-1 multiplexer                              : 1
# FSMs                                                 : 4

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Reading core <ipcore_dir/ROM.ngc>.
Loading core <ROM> for timing and area information for instance <instance_ROM>.
